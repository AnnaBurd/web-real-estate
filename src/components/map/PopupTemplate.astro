---
import type { Land } from "../../model/Land";
const props = Astro.props;

const land: Land = props.land;

// Prepare responsive image srcset and sizes
const imgUrl = land.images ? land.images[0].url : "/vectors/no_image.svg";
const apiQuery = "fm=jpg&fl=progressive&fit=fill";
const imgSizes = "(max-width: 1024px) 500px, 350px";

const imgSrc = `${imgUrl}?${apiQuery}&w=800&h=500`;
const imgSrcSet = `${imgUrl}?${apiQuery}&w=200&h=150 200w, ${imgUrl}?${apiQuery}&w=400&h=300 400w, ${imgUrl}?${apiQuery}&w=800&h=500 800w`;
---

<div class="absolute top-1/2 right-0 pr-40">
  <div class=``>
    <a
      href={`/${land.slug}`}
      target="_blank"
      rel="noopener noreferrer"
      class="bg-white rounded-xl overflow-hidden flex flex-col h-fit w-44 min-w-min md:max-w-sm tabbable p-2.5 shadow-lg"
    >
      <div class="w-full h-20 rounded-xl overflow-hidden shadow-md">
        <img
          loading="lazy"
          alt={land.title}
          src={land.images ? land.images[0].url : "/vectors/no_image.svg"}
          class="w-full h-full object-cover"
        />
      </div>

      <div class="text-base font-semibold tracking-tight leading-tight mt-2">
        {land.title}
      </div>

      <div class="mt-0.5">
        <span
          class="text-[--color-accent] text-base md:text-xl xl:text-xl font-normal md:font-light tracking-tighter leading-tight"
          >{(land?.price || 0) / 1000000000}</span
        >
        <span
          class="text-[--color-accent] text-sm font-medium xl:font-normal xl:text-sm"
          >{" "}tá»·{" "}</span
        >
        {
          land.area && (
            <>
              <span class="bg-[--color-text] w-[1px] h-5 xl:h-5 inline-block -mb-1 ml-1 mr-1.5 opacity-20" />
              <span class="opacity-90 tracking-tighter text-xs">
                {land.area.toLocaleString().replace(/,/g, " ")} m<sup>2</sup>
              </span>
            </>
          )
        }
      </div>
    </a>
  </div>
</div>

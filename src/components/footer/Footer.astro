---
import Container from "../../layouts/Container.astro";
import LogoSmall from "../logo/LogoSmall.astro";
import ButtonAnimated from "../ui/buttons/ButtonAnimated.astro";
import ColumnHeader from "./ColumnHeader.astro";
import SocialIcons from "../ui/social-icons/SocialIcons.astro";
import SubscriptionForm from "./SubscriptionForm.astro";
import Item from "./Item.astro";
---

<footer class="grid w-full grid-cols-1 grid-rows-[1fr,min,min]">
  <div
    class="bg-image-lazy z-0 h-full w-full [grid-column:1/2] [grid-row:1/2]"
    data-load="false"
  >
  </div>
  <div
    class="z-10 h-full w-full bg-gradient-to-t from-[--color-secondary-darkest] to-[#405273DD] [grid-column:1/2] [grid-row:1/2]"
  >
  </div>
  <Container
    className="z-30 my-16 flex h-[16vh] min-h-fit flex-col items-center justify-center [grid-column:1/2] [grid-row:1/2] md:my-12 md:h-[20vh] 2xl:my-14"
  >
    <h2
      class="max-w-[40ch] px-6 pb-3 pt-0 text-center font-light !leading-relaxed tracking-normal text-white md:text-xl xl:text-2xl"
    >
      VietLand đã đưa công nghệ và tính minh bạch vào bất động sản
    </h2>
    <div class="mt-4">
      <ButtonAnimated hiddenText="xem đất" onClick="location.href = '/tim-dat'">
        Tìm hiểu
      </ButtonAnimated>
    </div>
  </Container>
  <div class="bg-[--color-secondary-darkest]">
    <Container
      className="grid grid-cols-1 gap-2 pb-16 md:grid-cols-2 lg:grid-cols-3 "
    >
      <ColumnHeader text="Công ty" />
      <Item type="link" href="/thong-tin">Thông tin</Item>
      <Item
        type="button"
        id="callback-form-footer-btn"
        className="md:[grid-column:1/2] md:[grid-row:3/4]"
      >
        Liên hệ
      </Item>
      <ColumnHeader
        text="đầu tư"
        className="md:[grid-column:2/3] md:[grid-row:1/2]"
      />
      <Item type="link" href="/tim-dat">Tìm kiếm đất</Item>
      <Item
        type="link"
        href="/tim-dat?viewType=map"
        className="lg:[grid-column:2/3] lg:[grid-row:3/4]"
      >
        Xem đất trên bản đồ
      </Item>
      <ColumnHeader
        text="Nhận ưu đãi mới qua email"
        className="mb-1.5 mt-4 md:mb-0 md:mt-0 lg:mb-1.5 lg:[grid-column:3/4] lg:[grid-row:1/2]"
      />
      <SubscriptionForm className="lg:row-span-2" />
      <ColumnHeader
        text="LIÊN KẾT"
        className="mt-2 md:[grid-column:1/2] md:[grid-row:4/5] lg:mt-0 lg:[grid-column:3/4] lg:[grid-row:4/5]"
      />
      <SocialIcons
        positionClassName="-ml-1 [grid-column:1/2] md:[grid-row:5/6] lg:[grid-column:3/4] lg:[grid-row:5/6]"
        contacts={{
          facebookRef: "#",
          zaloRef: "#",
        }}
      />
    </Container>
  </div>
  <div class="bg-[--color-secondary-darkest]">
    <Container>
      <div class="h-[1px] w-full bg-white opacity-5"></div>
    </Container>

    <Container
      className="flex flex-col items-center justify-between gap-4 py-6 md:flex-row"
    >
      <LogoSmall companyTitle="VietLand" />
      <div
        class="pointer-events-none text-xs font-extralight text-white opacity-20"
      >
        © 2022 - {new Date().getFullYear()} VietLand All Rights Reserved
      </div>
    </Container>
  </div>
</footer>

<style lang="sass">
  // $img: "/img/footer.jpg?"
  $img: "https://images.ctfassets.net/2lc6rsj68vep/s1n2ZOawBGsBTzS7r1Hzb/2308aceb48c276fdc2d94a68d3c9e7c1/footer-min.jpg?q=100&fm=webp"

  .bg-image-lazy[data-load="true"]
    background-size: cover
    width: 100%
    height: 100%
    background-position: center top
    background-image: url($img + "&w=1200")
    @media (min-width: 768px)
      background-image: url($img + "&w=800")
    @media (min-width: 1024px)
      background-image: url($img + "&w=1200")
    @media (min-width: 1280px)
      background-image: url($img + "&w=1600")
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const lazyBackgrounds = [].slice.call(
      document.querySelectorAll(".bg-image-lazy"),
    );

    if ("IntersectionObserver" in window) {
      let lazyBackgroundObverver = new IntersectionObserver(
        (entries, observer) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              entry.target.setAttribute("data-load", "true");
              lazyBackgroundObverver.unobserve(entry.target);
            }
          });
        },
      );

      lazyBackgrounds.forEach((lazyBackground) => {
        lazyBackgroundObverver.observe(lazyBackground);
      });
    }
  });
</script>

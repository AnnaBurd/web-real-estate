---
interface Props {
  hiddenText: string;
}

const { hiddenText } = Astro.props;
---

<button
  class="button button--winona bg-[--color-accent] hover:bg-[--color-accent-darker] p-0 text-xs md:text-sm text-center text-white text-opacity-90 hover:text-opacity-100 font-semibold tracking-widest rounded-full uppercase relative overflow-hidden min-w-[130px] md:min-w-[150px] tabbable"
  data-text={hiddenText}
  ><span class="block align-middle"><slot /></span></button
>

<style>
  .button {
    z-index: 1;
    -webkit-backface-visibility: hidden;
    -moz-osx-font-smoothing: grayscale;
  }

  /* Winona */
  .button--winona:active {
    transform: scale(0.95);
    box-shadow: 0 2px 15px var(--color-accent-shadow);
  }

  .button--winona::after,
  .button--winona > span {
    padding: 1em 1.5em;
  }

  @media screen and (min-width: 768px) {
    .button--winona {
      transition: border-color 0.3s, background-color 0.3s,
        transform ease-in 0.15s, box-shadow ease-in 0.25s;
      transition-timing-function: cubic-bezier(0.2, 1, 0.3, 1);
    }

    .button--winona::after {
      content: attr(data-text);
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      opacity: 0;
      -webkit-transform: translate3d(0, 25%, 0);
      transform: translate3d(0, 25%, 0);
    }

    .button--winona::after,
    .button--winona > span {
      -webkit-transition: -webkit-transform 0.3s, opacity 0.3s;
      transition: transform 0.3s, opacity 0.3s;
      -webkit-transition-timing-function: cubic-bezier(0.2, 1, 0.3, 1);
      transition-timing-function: cubic-bezier(0.2, 1, 0.3, 1);
    }

    .button--winona:hover::after {
      opacity: 1;
      -webkit-transform: translate3d(0, 0, 0);
      transform: translate3d(0, 0, 0);
    }

    .button--winona:hover > span {
      opacity: 0;
      -webkit-transform: translate3d(0, -25%, 0);
      transform: translate3d(0, -25%, 0);
    }
  }
</style>

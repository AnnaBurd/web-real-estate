<div
  data-loaded="false"
  class="loader-header fixed top-0 left-0 w-full h-full z-[1000] overflow-hidden bg-[--color-grey-light]"
>
  <h2
    class="loader-logo absolute left-0 w-full cursor-default pointer-events-none h-full top-0 transform-gpu translate-y-[25%]"
  >
    <svg
      class="loader-inner block my-0 mx-auto w-1/4 min-w-[200px] max-w-[300px]"
      width="100%"
      height="100%"
      viewBox="0 0 682 205"
      preserveAspectRatio="xMidYMin meet"
      aria-labelledby="logo_title"
    >
      <title id="logo_title">Viet Land Website</title>
      <path
        class="logo-path-1"
        d="M228 2H2.5L25.5 44H160L93.5 161L117.5 202.5L228 2Z"
        fill="#3A5273"
        stroke="#3A5273"
        stroke-width="4"
        stroke-linejoin="round"></path>
      <path
        class="logo-path-2"
        d="M104 71.5H42L72.5 125.5L104 71.5Z"
        fill="#82D4BB"
        stroke="#82D4BB"
        stroke-width="4"
        stroke-linejoin="round"></path>
      <path
        class="logo-path-3"
        d="M258.46 66.2727L276.038 121.528H276.713L294.327 66.2727H311.372L286.301 139H266.486L241.379 66.2727H258.46ZM319.842 139V84.4545H334.969V139H319.842ZM327.441 77.4233C325.192 77.4233 323.263 76.6776 321.653 75.1861C320.067 73.6709 319.273 71.8598 319.273 69.7528C319.273 67.6695 320.067 65.8821 321.653 64.3906C323.263 62.8755 325.192 62.1179 327.441 62.1179C329.69 62.1179 331.608 62.8755 333.194 64.3906C334.804 65.8821 335.609 67.6695 335.609 69.7528C335.609 71.8598 334.804 73.6709 333.194 75.1861C331.608 76.6776 329.69 77.4233 327.441 77.4233ZM371.946 140.065C366.335 140.065 361.505 138.929 357.457 136.656C353.432 134.36 350.331 131.116 348.153 126.926C345.975 122.712 344.886 117.729 344.886 111.976C344.886 106.365 345.975 101.441 348.153 97.2031C350.331 92.9654 353.397 89.6629 357.35 87.2955C361.328 84.928 365.992 83.7443 371.342 83.7443C374.94 83.7443 378.29 84.3243 381.392 85.4844C384.517 86.6207 387.239 88.3371 389.559 90.6335C391.903 92.9299 393.726 95.8182 395.028 99.2983C396.33 102.755 396.981 106.803 396.981 111.443V115.598H350.923V106.223H382.741C382.741 104.045 382.268 102.116 381.321 100.435C380.374 98.7538 379.06 97.4399 377.379 96.4929C375.722 95.5223 373.792 95.0369 371.591 95.0369C369.294 95.0369 367.258 95.5696 365.483 96.6349C363.731 97.6766 362.358 99.0852 361.363 100.861C360.369 102.613 359.86 104.566 359.836 106.72V115.634C359.836 118.332 360.333 120.664 361.328 122.629C362.346 124.594 363.778 126.109 365.625 127.175C367.471 128.24 369.661 128.773 372.194 128.773C373.875 128.773 375.414 128.536 376.811 128.062C378.208 127.589 379.403 126.879 380.397 125.932C381.392 124.985 382.149 123.825 382.67 122.452L396.662 123.375C395.951 126.737 394.495 129.672 392.294 132.182C390.116 134.668 387.298 136.609 383.842 138.006C380.409 139.379 376.444 140.065 371.946 140.065ZM435.866 84.4545V95.8182H403.018V84.4545H435.866ZM410.475 71.3864H425.603V122.239C425.603 123.635 425.816 124.724 426.243 125.506C426.669 126.263 427.261 126.796 428.018 127.104C428.799 127.411 429.699 127.565 430.717 127.565C431.427 127.565 432.137 127.506 432.848 127.388C433.558 127.246 434.102 127.139 434.481 127.068L436.86 138.325C436.103 138.562 435.038 138.834 433.664 139.142C432.291 139.473 430.622 139.675 428.657 139.746C425.011 139.888 421.815 139.402 419.069 138.29C416.347 137.177 414.228 135.449 412.713 133.105C411.198 130.761 410.452 127.802 410.475 124.227V71.3864ZM447.176 139V66.2727H462.553V126.322H493.732V139H447.176ZM519.185 140.03C515.705 140.03 512.603 139.426 509.881 138.219C507.158 136.988 505.004 135.177 503.418 132.786C501.855 130.371 501.074 127.364 501.074 123.766C501.074 120.735 501.63 118.19 502.743 116.131C503.856 114.071 505.371 112.414 507.288 111.159C509.206 109.904 511.384 108.957 513.822 108.318C516.285 107.679 518.865 107.229 521.564 106.969C524.736 106.637 527.293 106.33 529.234 106.045C531.176 105.738 532.584 105.288 533.46 104.696C534.336 104.104 534.774 103.228 534.774 102.068V101.855C534.774 99.6061 534.064 97.866 532.643 96.6349C531.247 95.4039 529.258 94.7884 526.678 94.7884C523.955 94.7884 521.789 95.392 520.179 96.5994C518.569 97.7831 517.504 99.2746 516.983 101.074L502.991 99.9375C503.702 96.6231 505.098 93.7585 507.182 91.3438C509.265 88.9053 511.952 87.035 515.243 85.733C518.557 84.4072 522.393 83.7443 526.749 83.7443C529.779 83.7443 532.679 84.0994 535.449 84.8097C538.242 85.5199 540.716 86.6207 542.871 88.1122C545.049 89.6037 546.765 91.5213 548.02 93.8651C549.275 96.1851 549.902 98.9669 549.902 102.21V139H535.555V131.436H535.129C534.253 133.141 533.081 134.644 531.614 135.946C530.146 137.224 528.382 138.231 526.322 138.964C524.263 139.675 521.884 140.03 519.185 140.03ZM523.517 129.589C525.742 129.589 527.707 129.152 529.412 128.276C531.116 127.376 532.454 126.169 533.425 124.653C534.395 123.138 534.881 121.422 534.881 119.504V113.716C534.407 114.024 533.756 114.308 532.928 114.568C532.123 114.805 531.211 115.03 530.193 115.243C529.175 115.432 528.157 115.61 527.139 115.776C526.121 115.918 525.198 116.048 524.369 116.166C522.594 116.427 521.043 116.841 519.717 117.409C518.392 117.977 517.362 118.747 516.628 119.717C515.894 120.664 515.527 121.848 515.527 123.268C515.527 125.328 516.273 126.902 517.764 127.991C519.279 129.057 521.197 129.589 523.517 129.589ZM576.766 107.466V139H561.638V84.4545H576.056V94.0781H576.695C577.903 90.9058 579.927 88.3963 582.768 86.5497C585.609 84.6795 589.053 83.7443 593.102 83.7443C596.889 83.7443 600.192 84.5729 603.009 86.2301C605.826 87.8873 608.016 90.2547 609.579 93.3324C611.141 96.3864 611.923 100.032 611.923 104.27V139H596.795V106.969C596.818 103.631 595.966 101.027 594.238 99.1562C592.51 97.2623 590.13 96.3153 587.1 96.3153C585.064 96.3153 583.265 96.7533 581.702 97.6293C580.164 98.5052 578.956 99.7836 578.08 101.464C577.228 103.122 576.79 105.122 576.766 107.466ZM643.945 139.888C639.802 139.888 636.05 138.822 632.688 136.692C629.35 134.537 626.698 131.377 624.733 127.21C622.792 123.02 621.821 117.883 621.821 111.798C621.821 105.548 622.828 100.352 624.84 96.2088C626.852 92.0421 629.527 88.929 632.865 86.8693C636.227 84.786 639.908 83.7443 643.909 83.7443C646.963 83.7443 649.508 84.2652 651.544 85.3068C653.604 86.3248 655.261 87.6032 656.516 89.142C657.794 90.6572 658.765 92.1487 659.428 93.6165H659.89V66.2727H674.982V139H660.067V130.264H659.428C658.718 131.779 657.712 133.283 656.409 134.774C655.131 136.242 653.462 137.461 651.402 138.432C649.366 139.402 646.881 139.888 643.945 139.888ZM648.739 127.849C651.177 127.849 653.237 127.187 654.918 125.861C656.623 124.511 657.925 122.629 658.824 120.214C659.748 117.8 660.209 114.971 660.209 111.727C660.209 108.484 659.759 105.667 658.86 103.276C657.96 100.884 656.658 99.0379 654.953 97.7358C653.249 96.4337 651.177 95.7827 648.739 95.7827C646.253 95.7827 644.158 96.4574 642.453 97.8068C640.749 99.1562 639.459 101.027 638.583 103.418C637.707 105.809 637.269 108.579 637.269 111.727C637.269 114.9 637.707 117.705 638.583 120.143C639.482 122.558 640.773 124.452 642.453 125.825C644.158 127.175 646.253 127.849 648.739 127.849Z"
        fill="#3A5273"></path>
    </svg>
  </h2>

  <div
    class="loader-spinner absolute left-0 w-full cursor-default pointer-events-none bottom-[20%]"
  >
    <svg
      class="spinner-inner block my-0 mx-auto md:w-14 md:h-14 w-10 h-10"
      viewBox="0 0 80 80"
      stroke-width="9"
      fill="none"
      stroke-linecap="round"
      stroke-miterlimit="10"
      aria-labelledby="loading spinner"
    >
      <path
        class="spinner-circlebg"
        stroke="#ddd"
        d="M40,10C57.351,10,71,23.649,71,40.5S57.351,71,40.5,71 S10,57.351,10,40.5S23.649,10,40.5,10z"
      ></path>
      <path
        id="spinner-circle"
        class="spinner-circle"
        d="M40,10C57.351,10,71,23.649,71,40.5S57.351,71,40.5,71 S10,57.351,10,40.5S23.649,10,40.5,10z"
      ></path>
    </svg>
  </div>
</div>

<!-- Initial loading spinner and logo animations -->
<style lang="sass">
  .spinner-circle
    stroke: var(--color-accent)
    transition: stroke-dashoffset 0.2s

  // 1. Animate logo and spinner in from below
  .loader-logo,
  .loader-spinner
    opacity: 1
    animation: moveUp 1s cubic-bezier(0.7,0,0.3,1) both

  .loader-spinner
    animation-delay: .2s

  @keyframes moveUp
    from
      opacity: 0
      transform: translate3d(0,800px,0)

  // 2. Animate logo out on loading end
  .logo-path-1
    // Initial logo colors
    fill: var(--color-accent)
    stroke: var(--color-accent)
  .logo-path-2
    fill: var(--color-accent)
    stroke: var(--color-accent)
  .logo-path-3
    fill: var(--color-accent)
    stroke: var(--color-accent)

  // Logo colors on loading end
  .loader-header[data-loaded="true"]
    .logo-path-1
      transition: all 0.5s ease 0.3s
      fill: var(--color-secondary)
      stroke: var(--color-secondary)

    .logo-path-2
      transition: all 0.5s ease 0.3s
      fill: var(--color-accent)
      stroke: var(--color-accent)

    .logo-path-3
      transition: all 0.5s ease 0.3s
      fill: var(--color-secondary)
      stroke: var(--color-secondary)

  // Logo position on loading end
  .loader-header[data-loaded="true"]
    .loader-logo
      transform-origin: 50% 0
      animation: moveLogoOnFinish 1s cubic-bezier(0.7,0,0.3,1) forwards

  :root
    --logo-translate-x: calc(-50vw + 70px)
    --logo-scale: 0.55

  @media(min-width: 768px)
    :root
      --logo-translate-x: calc(-50vw + 60px)
      --logo-scale: 0.45
  @media(min-width: 1024px)
    :root
      --logo-translate-x: calc(-50vw + 100px)
      --logo-scale: 0.35

  @keyframes moveLogoOnFinish
    to
      transform: translate3d(0, 100%,0) translate3d(var(--logo-translate-x),2.5vh,0) scale3d(var(--logo-scale),var(--logo-scale),1)

  // 3. Animate spinner out on loading end
  .loader-header[data-loaded="true"]
    .loader-spinner
      animation: moveSpinnerOnFinish 0.5s cubic-bezier(0.7,0,0.3,1) forwards

  @keyframes moveSpinnerOnFinish
    to
      opacity: 0
      transform: translate3d(0,-100%,0) scale3d(0.3,0.3,1)

  // 4. Animate header out on loading end
  .loader-header[data-loaded="true"]
    animation: moveHeaderOnFinish 1s cubic-bezier(0.7,0,0.3,1) forwards

  @keyframes moveHeaderOnFinish
    to
      transform: translate3d(0,-100%,0)
</style>

<!-- Apply animations to page content - after loading screen  -->
<style is:global lang="sass">
  body[data-loaded="true"]
    .loaded-hero-heading,
    .loaded-hero-button,
    .loaded-hero-links,
    .loaded-hero-buttons,
    .loaded-hero-logo
      animation: animLoadedContent 1s cubic-bezier(0.7,0,0.3,1) both
    .loaded-hero-links
      animation-delay: .07s
    .loaded-hero-heading
      animation-delay: .2s
    .loaded-hero-buttons
      animation-delay: .15s
    .loaded-hero-button
      animation-delay: .3s

  @keyframes animLoadedContent
    from
      opacity: 0
      transform: translate3d(0,200px,0)
</style>

<!-- Listen to loading events and hide loading screen -->
<script is:inline>
const loadingProgressState = {
  progress: 0,
  hasLoaded: false,
};

// Query spinner element
const spinner = document.getElementById("spinner-circle"); // as HTMLElement &
SVGPathElement;
const spinnerContainer = document.querySelector(".loader-header"); // as HTMLElement;

// Set up initial circle path length
const circlePathLength = spinner?.getTotalLength();
spinner.style.strokeDasharray = circlePathLength + "";
spinner.style.strokeDashoffset = circlePathLength + "";

// Allow to re-render spinner progress
const renderSpinnerCircle = (progress) => {
  const offset = circlePathLength * (1 - progress);
  spinner.style.strokeDashoffset = offset + "";
};

// Generate progress values from 0 to 1
const progressEstimated = () => {
  const interval = setInterval(() => {
    // If the page has really loaded stop the loading animation
    if (loadingProgressState.hasLoaded) {
      spinnerContainer.setAttribute("data-loaded", "true");

      document.body.setAttribute("data-loaded", "true");

      // Clear loding-screen related styles
      setTimeout(() => {
        document.body.removeAttribute("data-loaded");

        spinnerContainer.style.visibility = "hidden";
      }, 2000);

      clearInterval(interval);
    }

    // Pretend that we has calculated loading time
    loadingProgressState.progress += Math.random() * 0.1;

    if (loadingProgressState.progress >= 0.8) {
      loadingProgressState.progress = 0.87;
    }

    renderSpinnerCircle(loadingProgressState.progress);
  }, 100);
};

window.addEventListener("load", () => {
  loadingProgressState.progress = 1;
  loadingProgressState.hasLoaded = true;
});

// Wait until initial animation is finished and then start loading
spinnerContainer.addEventListener(
  "animationend",
  () => {
    // Start loading
    progressEstimated();
  },
  { once: true }
);
</script>

---
interface Props {
  onClick?: string;
  type?: "button" | "submit";
  className?: string;
}

const { onClick, type, className } = Astro.props;

const attributes: any = {};
if (onClick) attributes.onclick = onClick;
if (type) attributes.type = type;
---

<button
  {...attributes}
  class={`button bg-[--color-accent] hover:bg-[--color-accent-darker] px-3.5 py-2 text-xs md:text-sm text-center text-white text-opacity-90 hover:text-opacity-100 font-semibold tracking-wide rounded-full uppercase overflow-hidden focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-[#607cb3] focus-visible:border-[#607cb344] focus-visible:outline-none ${
    className ? className : ""
  }`}><slot /></button
>

<style>
  .button {
    transition: border-color 0.3s, background-color 0.3s,
      transform ease-in 0.15s, box-shadow ease-in 0.25s;
    transition-timing-function: cubic-bezier(0.2, 1, 0.3, 1);
  }

  .button:active {
    transform: scale(0.95);
    box-shadow: 0 2px 15px var(--color-accent-shadow);
  }
</style>

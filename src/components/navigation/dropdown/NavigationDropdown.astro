---
import HamburgerButton from "./HamburgerButton.astro";
import NavigationDropdownItem from "./NavigationDropdownItem.astro";

interface Page {
  title: string;
  href: string;
}

interface Props {
  currentPage: string;
  pages: Page[];
  phone: string;
}

const { currentPage, pages, phone } = Astro.props;
---

<HamburgerButton />

<dropdown-menu
  id="hamburger-menu"
  class="hamburger-menu hamburger-menu--closed fixed bg-white w-screen top-0 right-0 -z-10 pt-14 pb-1.5 list-none"
>
  <!-- Navigation links -->
  {
    pages.map((page) => (
      <NavigationDropdownItem
        href={page.href}
        isActive={page.href === currentPage}
      >
        {page.title}
      </NavigationDropdownItem>
    ))
  }

  <!-- Additional button to open contact form -->
  <li class="w-full px-2 py-1">
    <button
      id="callback-form-btn-small"
      class="block uppercase text-sm tracking-tight font-semibold px-4 py-4 text-opacity-80 rounded-lg w-full hover:bg-[--color-accent] hover:text-white transition-colors duration-200 xl:hidden text-left"
      >Liên hệ</button
    >
  </li>

  <!-- Button with phone number to call from mobile devices -->
  <li class="w-full px-2 py-1">
    <button
      onclick=`location.href='tel:${phone}'`
      class="flex flex-row items-center gap-x-1 uppercase text-base tracking-normal font-semibold px-4 py-4 text-opacity-80 rounded-lg w-full hover:bg-[--color-accent] hover:text-white transition-colors duration-200 xl:hidden sm:hidden"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
        fill="currentColor"
        class="w-6 h-6"
      >
        <path
          fill-rule="evenodd"
          d="M15 3.75a.75.75 0 01.75-.75h4.5a.75.75 0 01.75.75v4.5a.75.75 0 01-1.5 0V5.56l-4.72
4.72a.75.75 0 11-1.06-1.06l4.72-4.72h-2.69a.75.75 0 01-.75-.75z"
          clip-rule="evenodd"></path>
        <path
          fill-rule="evenodd"
          d="M1.5 4.5a3 3 0 013-3h1.372c.86 0 1.61.586 1.819 1.42l1.105
4.423a1.875 1.875 0 01-.694 1.955l-1.293.97c-.135.101-.164.249-.126.352a11.285 11.285
0 006.697 6.697c.103.038.25.009.352-.126l.97-1.293a1.875 1.875 0 011.955-.694l4.423
1.105c.834.209 1.42.959 1.42 1.82V19.5a3 3 0 01-3 3h-2.25C8.552 22.5 1.5 15.448 1.5
6.75V4.5z"
          clip-rule="evenodd"></path>
      </svg>
      <span>{phone}</span>
    </button>
  </li>
</dropdown-menu>

<!-- Style menu in open and closed states, with transition in between -->
<style>
  .hamburger-menu {
    transition: transform 0.5s cubic-bezier(0.77, 0.2, 0.05, 1);
    transform: translateY(0%);
  }

  .hamburger-menu--closed {
    visibility: hidden;
    transform: translateY(-100%);
    transition:
      transform 0.3s cubic-bezier(0.77, 0.2, 0.05, 1),
      visibility 0s 0.3s;
  }
</style>

<!-- Handle menu opening and closing -->
<script>
  class DropdownMenu extends HTMLElement {
    private isOpen: boolean = false;
    private button: HTMLElement;

    constructor() {
      super();

      this.button = document.querySelector(".hamburger-btn") as HTMLElement;
    }

    async hide() {
      if (!this.isOpen) return;

      this.isOpen = false;
      this.button.setAttribute("data-open", "false");
      this.classList.add("hamburger-menu--closed");

      await new Promise((resolve) => setTimeout(resolve, 200));
    }
    open() {
      if (this.isOpen) return;

      this.isOpen = true;
      this.button.setAttribute("data-open", "true");
      this.classList.remove("hamburger-menu--closed");
    }

    toggle() {
      this.isOpen ? this.hide() : this.open();
    }

    isOpened() {
      return this.isOpen;
    }
  }

  customElements.define("dropdown-menu", DropdownMenu);
</script>
